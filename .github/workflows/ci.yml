name: CI - Docker Build & Push

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # ======================
  # Flask App
  # ======================
  flask-app:
    runs-on: self-hosted
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      GIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip install -r backend/requirements.txt || true

      - name: Linting (Flake8)
        run: pip install flake8 && flake8 backend || true
        continue-on-error: true

      - name: SAST (CodeQL Analysis)
        uses: github/codeql-action/analyze@v2
        continue-on-error: true

      - name: SCA (Safety)
        run: pip install safety && safety check -r backend/requirements.txt || true
        continue-on-error: true

      - name: Unit Tests (pytest)
        run: pip install pytest && pytest backend/tests || true
        continue-on-error: true

      - name: DAST (OWASP ZAP Baseline Scan)
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:5000'
        continue-on-error: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build & Push Flask App
        run: |
          cd backend
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/flask-app:${{ env.GIT_SHA }} .
          docker push ${{ env.DOCKER_HUB_USERNAME }}/flask-app:${{ env.GIT_SHA }}

      - name: Image Scan (Trivy - Flask App)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_HUB_USERNAME }}/flask-app:${{ env.GIT_SHA }}
          format: table
          exit-code: 0
        continue-on-error: true

      # Save Git SHA for CD pipeline
      - name: Save Git SHA
        run: |
          echo "${{ env.GIT_SHA }}" > backend/GIT_SHA.txt
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add backend/GIT_SHA.txt
          git commit -m "Update latest Git SHA" || echo "No changes to commit"
          git push
